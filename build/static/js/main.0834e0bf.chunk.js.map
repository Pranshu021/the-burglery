{"version":3,"sources":["Components/NavigationBar.js","Components/MenuCards.js","Components/FlipCard.js","hooks/useFetch.js","Components/Menu.js","Components/Home.js","hooks/useFetchPrice.js","Components/PlaceOrder.js","Components/Orders.js","Components/AddonsMenu.js","Components/EditOrder.js","Components/LogIn.js","App.js","reportWebVitals.js","reducers/isLogged.js","reducers/isCustomOrder.js","reducers/reducerIndex.js","index.js"],"names":["NavigationBar","props","className","to","MenuCards","src","burgerName","width","height","alt","burgerPrice","FlipCard","useFetch","url","useState","data","setData","isError","setErrorState","isLoading","setIsLoading","useEffect","fetch","then","response","ok","Error","json","setTimeout","catch","error","message","Menu","burgerData","map","burger","burger_name","burger_price","key","Home","useFetchPrice","price","setPrice","filter","PlaceOrder","useParams","submitState","changeSubmitState","location","useLocation","navigate","useNavigate","dispatch","useDispatch","orderPlaced","changeOrderState","id","Math","floor","random","customer_name","customer_phone","orderName","orderTime","addons","total_amount","burgerDetails","setBurgerDetails","pathname","includes","method","headers","body","JSON","stringify","type","orderid","status","console","log","onSubmit","event","preventDefault","today","Date","dateorderTime","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","customerName","document","getElementById","value","quantity","customerPhone","disabled","required","min","max","placeholder","role","Orders","orderListItems","orderListData","setOrderListData","setLoadingState","order","addons_amount","length","onClick","orderID","pop","find","window","reload","handleModify","AddonsMenu","menuItem","menuItems","item","index","class","prices","name","onChange","addOnSelectHandler","EditOrder","items","addOnsCost","customOrder","useSelector","state","isCustomOrder","Cheese","Grilled","Spicy","Coke","Sprite","Fanta","Water","Packed","addOnState","changeAddOnState","addonsList","Object","keys","forEach","indexOf","addOnName","target","orderSubmit","LogIn","require","username","password","res","App","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLogged","isLoggedIn","action","customerOrder","allReducers","combineReducers","loginInfo","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render"],"mappings":"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","file":"static/js/main.0834e0bf.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport '../CSS/navbar.css';\r\n\r\nconst NavigationBar = (props) => {\r\n    return(\r\n      <div className=\"container navbigation-bar\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <h1 className=\"navbar-heading\">The Burglery</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"row navigation-links\">\r\n          <Link to=\"/\" className=\"navigation-link\">Home</Link>\r\n          <Link to=\"/orders\" className=\"navigation-link\">Orders</Link>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\n\r\nexport default NavigationBar;\r\n","import '../CSS/MenuCards.css'\r\n\r\n\r\nconst MenuCards = (props) => {\r\n\r\n    return (\r\n        <div className=\"menu-cards flip-card-front\">\r\n            <img className=\"burger_image\" src={process.env.PUBLIC_URL + '/img/' + props.burgerName + '.jpg'} width=\"150px\" height=\"150px\" alt={props.burgerName + \" image\"}/>\r\n            <p className=\"burger_name\">{props.burgerName}</p>\r\n            <p className=\"burger_price\">{props.burgerPrice}</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MenuCards;","import MenuCards from './MenuCards.js';\r\nimport '../CSS/FlipCard.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst FlipCard = (props) => { \r\n    return(\r\n        <div className=\"flip-card container\">\r\n            <div className=\"flip-card-inner\">\r\n                <div className=\"flip-card-front\">\r\n                    <MenuCards burgerName={props.burgerName} \r\n                    burgerPrice={props.burgerPrice + \" Rs./\"}\r\n                   />\r\n                </div>\r\n                <div className=\"flip-card-back\">\r\n                    <div className=\"d-flex align-items-center back-side\">\r\n                        <div className=\"row buttons-row\">\r\n                            <Link to={\"/order/\" + props.burgerName}><button className=\"btn btn-outline-success flip-card-buttons\">Place Order</button></Link>\r\n                            <Link to={\"/order/\" + props.burgerName + \"/custom\"}><button className=\"btn btn-outline-success flip-card-buttons mt-2\">Edit Order</button></Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div> \r\n)\r\n\r\n}\r\n\r\nexport default FlipCard;","import { useEffect, useState } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n    const [data, setData] = useState(null);\r\n    const [isError, setErrorState] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        fetch(url)\r\n        .then((response) => {\r\n            if(!response.ok) {\r\n                throw new Error('Failed to fetch.');\r\n            }\r\n            return response.json()\r\n        })\r\n        .then((json) => {\r\n            setTimeout(() => {\r\n                setData(json);\r\n                setIsLoading(false);\r\n            }, 300)\r\n            setErrorState(null);\r\n        })\r\n        .catch((error) => {\r\n            setIsLoading(false);\r\n            setErrorState(error.message);\r\n        })\r\n    }, [url]);\r\n    return {data, isLoading, isError};\r\n\r\n}\r\n\r\nexport default useFetch;\r\n\r\n","import '../CSS/menu.css';\r\nimport FlipCard from './FlipCard';\r\nimport useFetch from '../hooks/useFetch';\r\nimport {useState, useEffect} from 'react';\r\n\r\nconst Menu = (props) => {\r\n    const {data:burgerData, isLoading,  isError: error} = useFetch('https://api.jsonbin.io/b/61b767380ddbee6f8b1c90f7/1');   //Burger URL\r\n    // const {data:burgerData, isLoading,  isError: error} = useFetch('http://localhost:8000/burgers');\r\n\r\n    return (\r\n        <div className=\"container menu-container\">\r\n           <div className=\"row menu-row g-3\">\r\n               {isLoading && <div className=\"alert alert-warning\">Loading...</div>}\r\n               {error && <div className=\"alert alert-danger\">{error}</div>}\r\n               {burgerData && burgerData.map(burger => {\r\n                  return <FlipCard \r\n                  key={burger.key}\r\n                  burgerName={burger.burger_name} \r\n                  burgerPrice={burger.burger_price}\r\n                  />\r\n              })}\r\n           </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n// burgerImage={burger.image_path}\r\n\r\nexport default Menu;","import '../CSS/Home.css'\r\nimport Menu from './Menu';\r\n\r\nconst Home = (props) => {\r\n\r\n  return (\r\n    <div className=\"container home-container\">\r\n      <div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <h2>Menu</h2>\r\n            </div>\r\n          <Menu />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;","import { useEffect, useState } from \"react\"\r\n\r\nconst useFetchPrice = (url, burgerName) => {\r\n    const [price, setPrice] = useState(null);\r\n    var burgerPrice;\r\n    useEffect(() => {\r\n        fetch(url)\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            burgerPrice = data.filter(burger => burger.burger_name === burgerName)[0][\"burger_price\"];  \r\n            setPrice(burgerPrice);\r\n        })\r\n    })\r\n    return price;\r\n}\r\n\r\nexport default useFetchPrice;","import '../CSS/PlaceOrder.css'\r\nimport { useParams, useLocation } from 'react-router';\r\nimport { useState, useEffect }  from 'react';\r\nimport useFetchPrice from '../hooks/useFetchPrice';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst PlaceOrder = (props) => {\r\n    const {burgerName} = useParams();\r\n    const [submitState, changeSubmitState] = useState(false);\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    let isCustom = false;\r\n    let burgerPrice;\r\n\r\n    const [orderPlaced, changeOrderState] = useState(\"nothing\");\r\n\r\n    const [burgerDetails, setBurgerDetails] = useState({\r\n        id : Math.floor(Math.random() * 1000000),\r\n        customer_name : null,\r\n        customer_phone : null,\r\n        orderName : burgerName,\r\n        orderTime : null, \r\n        addons : [],\r\n        total_amount: 0 \r\n    });\r\n\r\n    if(location.pathname.includes('/custom')){\r\n        isCustom = true;\r\n    }\r\n\r\n    burgerPrice = useFetchPrice('https://api.jsonbin.io/b/61b767380ddbee6f8b1c90f7/1', burgerName); // Burgers url\r\n\r\n    const HandleSubmit = (event) => {\r\n        event.preventDefault();\r\n        var today = new Date();\r\n        const dateorderTime = (today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate()) +' '+(today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds());\r\n        const customerName = document.getElementById(\"customer_name\").value;\r\n        const quantity = document.getElementById(\"quantity\").value;\r\n        const customerPhone = document.getElementById(\"customer_phone\").value;\r\n        setBurgerDetails({...burgerDetails, orderTime: dateorderTime, customer_name: customerName, customer_phone: customerPhone, total_amount: burgerPrice * quantity});\r\n        changeSubmitState(true);\r\n        document.getElementById(\"submit-button\").disabled = true;\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!submitState ){\r\n            console.log(\"Clicked\")\r\n        }\r\n        else {\r\n            fetch('https://api.jsonbin.io/b/61b788c701558c731cd39fcb/1', {          // Orders URL\r\n            method: 'POST',\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify(burgerDetails),\r\n        }).then((response) => {\r\n            if(location.pathname.includes(\"/custom\")) {\r\n                dispatch({type: 'CUSTOM', orderid: burgerDetails.id});\r\n                navigate(\"/order/edit/\" + burgerName);\r\n            }\r\n            else {\r\n                if(response.status == 201) {\r\n                    changeOrderState(\"placed\");\r\n                    console.log(\"Order Placed\")\r\n                }\r\n                else {\r\n                    throw Error(\"Request Failed. Network Error...\")\r\n                }\r\n                setTimeout(() => {\r\n                    navigate('/');\r\n                }, 1000);\r\n            }\r\n        }).catch((error) => {\r\n            changeOrderState(\"failed\");\r\n        })}\r\n        \r\n    }, [submitState]);\r\n\r\n    return (\r\n        <div className=\"container form-container\">\r\n            <h2>Place Your Order</h2>\r\n            <u><p>{burgerName}</p></u>\r\n\r\n            <form className=\"order-form\" onSubmit={HandleSubmit}>\r\n                \r\n                <div className=\"row inputs\">\r\n                    <label className=\"mb-1\">Enter Quantity</label>\r\n                    <input className=\"placeorder-inputs\" required type=\"number\" min=\"1\" max=\"100\" id=\"quantity\"/>   \r\n                </div>\r\n\r\n                <div className=\"row inputs\">\r\n                    <label className=\"mb-1\">Name</label>\r\n                    <input className=\"placeorder-inputs\"  required type=\"text\" id=\"customer_name\" placeholder=\"Your Name...\"/>\r\n                </div>\r\n                \r\n                <div className=\"row inputs\">\r\n                    <label className=\"mb-1\">Phone</label>\r\n                    <input className=\"placeorder-inputs\"  required type=\"text\" placeholder=\"Your Phone Number...\" id=\"customer_phone\"/>\r\n                </div>\r\n\r\n                <div className=\"row submit-button-row\">\r\n                    <button className=\"placeorder-inputs\"  type=\"submit\" className=\"btn btn-danger\" id=\"submit-button\">Place Order</button>\r\n                </div>  \r\n            </form>\r\n\r\n            {orderPlaced === \"placed\" ? <div className=\"alert alert-success\" role=\"alert\" >Order Placed. Redirecting....</div>: orderPlaced === \"failed\" ? <div className=\"alert alert-danger\" role=\"alert\" >Order Failed. Please Try Again Later...</div> : null}\r\n            {/* {orderPlaced === \"can't place\" ? <div className=\"alert alert-danger\" role=\"alert\" >Failed. Network Error....</div> : null} */}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlaceOrder;","import { useEffect, useState } from \"react\";\r\nimport '../CSS/Orders.css'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst Orders = (props) => {\r\n    const [orderListData, setOrderListData] = useState([]);\r\n    const [isLoading, setLoadingState] = useState(true);\r\n    const [error, setErrorState] = useState(null);\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    \r\n    var orderListItems;\r\n    useEffect(() => {\r\n        fetch('https://api.jsonbin.io/b/61b788c701558c731cd39fcb/1')   // Order URL\r\n        .then((response) => {\r\n            if(!response.ok) {\r\n                throw Error(\"Network Error...\");\r\n            }\r\n            return response.json()\r\n        }).then(data => {\r\n            setTimeout(() => {\r\n                setOrderListData(data);\r\n                setLoadingState(false);\r\n            }, 300)\r\n            setErrorState(null);\r\n            \r\n        }).\r\n        catch((error) => {\r\n            setLoadingState(false);\r\n            setErrorState(error.message);\r\n        });\r\n    }, []);\r\n\r\n    const orderDeleteHandler = (orderID) => {\r\n        orderListData.pop(orderListData.find(order => order.id === orderID));\r\n        fetch('https://api.jsonbin.io/b/61b788c701558c731cd39fcb/1' + orderID, {\r\n            method: 'DELETE',\r\n        }).then(() => {\r\n            window.location.reload(true);\r\n            // navigate('/orders')\r\n        })\r\n    }\r\n\r\n    const handleModify = (order) => {\r\n        dispatch({type: 'CUSTOM', orderid: order.id})\r\n        navigate('/order/' + order.id + '/modify')\r\n    }\r\n\r\n\r\n    orderListItems = orderListData.map((order) => {\r\n        return (\r\n            <div className=\"row order-item-row\" key={order.id}>\r\n                <div className=\"col-sm-6 order-details\">\r\n                    <p>\r\n                    Order ID : <b>{order.id} </b><br />\r\n                    Customer Name : <b>{order.customer_name}</b><br />\r\n                    Order : <b>{order.orderName}</b><br />\r\n                    Amount : <b>₹ {order.total_amount + order.addons_amount}</b><br />\r\n                    Time : <b>{order.orderTime}</b><br />\r\n                    Addons : <b>{order.addons.length > 0 ? \"\" +  order.addons : \"None\"}</b>\r\n                    </p>\r\n                </div>  \r\n                <div className=\"col-sm-6 order-control-buttons\">\r\n                    <button className=\"btn btn-outline-danger order-page-buttons\" onClick={() => orderDeleteHandler(order.id)}>Delete Order</button>\r\n                    <button className=\"btn btn-outline-danger order-page-buttons\" onClick={() => handleModify(order)}>Edit Order</button>\r\n                </div>\r\n            </div>   \r\n        )\r\n    })\r\n\r\n\r\n    return (\r\n        <div className=\"container orders-container\">\r\n                {isLoading && <div className=\"alert alert-warning\">Loading ...</div>}\r\n                {error && <div className=\"alert alert-danger\">{error}</div>}\r\n                {orderListData && orderListItems }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Orders;","const AddonsMenu = (props) => {\r\n\r\n    const menuItem = props.menuItems.map(\r\n        (item, index) => {\r\n            return (\r\n                <div className=\"row checkboxes-row\" key={index}>\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"col-md-12\">\r\n                            <label class=\"checkbox-container\">{item}{\" (\" + props.prices[index] + \" Rs./)\"}\r\n                                <input type=\"checkbox\" id={item} name=\"checkboxes\" className={\"checkboxes \" + item + \"-checkbox\"} onChange={props.addOnSelectHandler}/>\r\n                                <span class=\"checkmark\"></span>\r\n                            </label>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    )\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {menuItem}\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default AddonsMenu;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/* <div className=\"row checkboxes-row\">\r\n                    <div className=\"col-md-6\">\r\n                        <label className=\"labels\">Cheese </label>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <input type=\"checkbox\" id=\"cheese\" className=\"checkboxes cheese-checkbox\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row checkboxes-row\">\r\n                    <div className=\"col-md-6\">\r\n                        <label className=\"labels\">Grilled </label>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <input type=\"checkbox\" id=\"grilled\" className=\"checkboxes grilled-checkbox\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row checkboxes-row\">\r\n                    <div className=\"col-md-6\">\r\n                        <label className=\"labels\">Spicy </label>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <input type=\"checkbox\" id=\"spicy\" className=\"checkboxes spicy-checkbox\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row checkboxes-row\">\r\n                    <div className=\"col-md-6\">\r\n                        <label className=\"labels\">Packed </label>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <input type=\"checkbox\" id=\"packed\" className=\"checkboxes packed-checkbox\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row checkboxes-row\">\r\n                    <div className=\"col-md-6\">\r\n                        <label className=\"labels\">Coke </label>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <input type=\"checkbox\" id=\"packed\" className=\"checkboxes packed-checkbox\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row checkboxes-row\">\r\n                    <div className=\"col-md-6\">\r\n                        <label className=\"labels\">Sprite </label>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <input type=\"checkbox\" id=\"packed\" className=\"checkboxes packed-checkbox\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row checkboxes-row\">\r\n                    <div className=\"col-md-6\">\r\n                        <label className=\"labels\">Fanta </label>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <input type=\"checkbox\" id=\"packed\" className=\"checkboxes packed-checkbox\"/>\r\n                    </div>\r\n                </div> */}","import AddonsMenu from './AddonsMenu'\r\nimport '../CSS/EditOrder.css'\r\nimport { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nconst EditOrder = (props) => {\r\n    const items = [\"Cheese\", \"Grilled\", \"Spicy\", \"Coke\", \"Sprite\", \"Fanta\", \"Water\", \"Packed\"];\r\n    const prices = [10, 10, 10, 40, 40, 40, 20, 0];\r\n    const params = useParams();\r\n    let orderSubmit;\r\n    let addOnsCost=0;\r\n    const navigate = useNavigate();\r\n    const customOrder = useSelector(state => state.isCustomOrder);\r\n    const [addOnState, changeAddOnState] = useState({\r\n        Cheese: false,\r\n        Grilled: false,\r\n        Spicy: false,\r\n        Coke: false,\r\n        Sprite: false,\r\n        Fanta: false,\r\n        Water: false,\r\n        Packed: false\r\n    })\r\n\r\n    const [orderPlaced, changeOrderState] = useState(\"nothing\");\r\n\r\n\r\n    const HandleCustomOrder = (event) => {\r\n        event.preventDefault();\r\n        fetch('https://api.jsonbin.io/b/61b788c701558c731cd39fcb/1' + customOrder.orderid, {  //Order URL\r\n            method: 'PATCH',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                addons: addonsList,\r\n                addons_amount : addOnsCost\r\n            })\r\n        }).then((response) => {\r\n            if(response.status == 200) {\r\n                changeOrderState(\"placed\");\r\n                console.log(\"Order Placed\")\r\n            }\r\n            else {\r\n                throw Error(\"Request Failed. Network Error...\")\r\n            }\r\n            setTimeout(() => {\r\n                navigate('/');\r\n            }, 1000);\r\n        })\r\n    }\r\n\r\n    const addOnSelectionHandler = (event) => {\r\n        const addOnName = event.target.id;\r\n        console.log(event.target.id)\r\n        console.log(!addOnState[addOnName])\r\n        changeAddOnState({...addOnState, [addOnName]: !addOnState[addOnName]});\r\n    }\r\n\r\n    let addonsList = [];\r\n    useEffect(() => {\r\n        addonsList = Object.keys(addOnState).filter(key => addOnState[key]);\r\n        addonsList.forEach(item => {\r\n            addOnsCost += prices[items.indexOf(item)];\r\n        })\r\n    }, [addOnState])\r\n\r\n\r\n    return (\r\n        <div className=\"container edit-order-container p-3 mt-3\">\r\n            <form className=\"form-group edit-order-form\" onSubmit={HandleCustomOrder}>\r\n                <AddonsMenu menuItems={items} prices={prices} addOnSelectHandler={addOnSelectionHandler}/>\r\n                <button type=\"submit\" className=\"btn btn-danger btn-block edit-order-button\">Submit</button>\r\n                {orderSubmit}\r\n            </form>\r\n            {orderPlaced === \"placed\" ? <div className=\"alert alert-success\" role=\"alert\" >Order Placed. Redirecting....</div>: orderPlaced === \"failed\" ? <div className=\"alert alert-danger\" role=\"alert\" >Order Failed. Please Try Again Later...</div> : null}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditOrder;","import '../CSS/LogIn.css'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {login, logout} from '../actions/loginAction';\r\nimport { useNavigate } from 'react-router';\r\nconst crypto = require('crypto');\r\n\r\nconst LogIn = (props) => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    \r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        const username = document.getElementById(\"username\").value;\r\n        const password = document.getElementById(\"password\").value\r\n        // dispatch({type: 'LOGIN', username: document.getElementById(\"username\").value, password: document.getElementById(\"password\").value});\r\n        fetch('http://localhost:8000/users').then((res) => {\r\n                return res.json();\r\n            }).then((data) => {\r\n                if(data.find((data) => {\r\n                    return data.username === username && data.password === password;\r\n                })) {\r\n                    dispatch({type : 'LOGIN', username: username, password: password});\r\n                    navigate('/');\r\n                }\r\n            })\r\n        }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row intro-row\">\r\n                <div className=\"col-lg-12\">\r\n                    <h2>Welcome to the Burglery</h2>\r\n                    <p>Here, we steal your Hunger ;)</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row form-row\">\r\n                <div className=\"col-lg-12\">\r\n                    <h2>Log In</h2>\r\n                    <form className=\"form-horizontal login-form\" onSubmit={submitHandler} >\r\n                        <div className=\"row input-rows\">\r\n                            <div className=\"col-lg-12\">\r\n                                {/* <label>Username : </label> */}\r\n                                <input type=\"text\" id=\"username\" className=\"form-control\" placeholder=\"Username\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row input-rows\">\r\n                            <div className=\"col-lg-12\">\r\n                                {/* <label>Email : </label> */}\r\n                                <input type=\"text\" id=\"email\" className=\"form-control\" placeholder=\"Email\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row input-rows\">\r\n                            <div className=\"col-lg-12\">\r\n                                {/* <label>Password : </label> */}\r\n                                <input type=\"password\" id=\"password\" className=\"form-control\" placeholder=\"Password\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row button-row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <button type=\"submit\" className=\"btn btn-danger btn-block login-button\">Log In</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogIn;","import './App.css';\nimport { BrowserRouter as Router, Route, Routes} from 'react-router-dom'; \nimport NavigationBar from './Components/NavigationBar';\nimport Home from './Components/Home';\nimport PlaceOrder from './Components/PlaceOrder';\nimport Orders from './Components/Orders';\nimport EditOrder from './Components/EditOrder';\nimport LogIn from './Components/LogIn';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavigationBar />\n        <div className=\"content\">\n          <Routes>\n            <Route exact path=\"/\" element={<Home/>} />\n            <Route exact path=\"/orders\" element={<Orders />} />\n            <Route path=\"/order/:burgerName\" element={<PlaceOrder />} />\n            <Route path=\"/order/:burgerName/custom\" element={<PlaceOrder />} />\n            <Route path=\"/order/edit/:burgerName\" element={<EditOrder />} />\n            <Route path=\"/login\" element={<LogIn />}/>\n            <Route path=\"/order/:orderid/modify\" element={<EditOrder />} />\n          </Routes>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {login, logout } from '../actions/loginAction';\r\n\r\nconst isLogged = (state = {username : \"\", password : \"\", isLoggedIn: false}, action) => {\r\n    switch(action.type) {\r\n        case \"LOGIN\":\r\n            console.log(\"Username : \" + action.username);\r\n            return {username : action.username, password : action.password, isLoggedIn: true};\r\n        case \"LOGOUT\":\r\n            return {username : action.username, password : action.password, isLoggedIn: false};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default isLogged;","const isCustomOrder = (state = {orderid: null, customerOrder: false}, action) => {\r\n    switch(action.type) {\r\n        case 'CUSTOM':\r\n            console.log(\"Order ID : \" + action.orderid)\r\n\r\n            return {\r\n                orderid: action.orderid,\r\n                customerOrder: true,\r\n            }\r\n        case 'NOT_CUSTOM':\r\n            return {\r\n                orderid: action.orderid,\r\n                customOrder: false,\r\n            }\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default isCustomOrder;","import isLogged from './isLogged';\r\nimport isCustomOrder from './isCustomOrder';\r\nimport { combineReducers } from 'redux';\r\n\r\nconst allReducers = combineReducers({\r\n    loginInfo: isLogged,\r\n    isCustomOrder: isCustomOrder,\r\n});\r\n\r\nexport default allReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport allReducers from './reducers/reducerIndex';\nimport { Provider } from 'react-redux';\n\n\nconst store = createStore(\n  allReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}